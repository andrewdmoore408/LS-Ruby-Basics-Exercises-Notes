NEW PET

pets = ['cat', 'dog', 'fish', 'lizard']

my_pet = pets[2]

puts "I have a pet #{my_pet}!"

MORE THAN ONE

my_pets = pets.select { |pet| pet.start_with?('f', 'l') }

puts "I have a pet #{my_pets[0]} and a pet #{my_pets[1]}!"

--Notes
	This solution words, but it would be much simpler in this case to use a range in the brackets. I can select multiple consecutive array elements like so: pets[2..3]

FREE THE LIZARD

my_pets.pop

puts "I have a pet #{my_pets[0]}!"

ONE ISN'T ENOUGH

pets = ['cat', 'dog', 'fish', 'lizard']
my_pets = pets[2..3]
my_pets.pop

my_pets.push(pets[1])

puts "I have a pet #{my_pets[0]} and a pet #{my_pets[1]}!"

WHAT COLOR ARE YOU?

colors = ['red', 'yellow', 'purple', 'green']

colors.each { |color| puts "I'm the color #{color}!" }

DOUBLED

numbers = [1, 2, 3, 4, 5]

doubled_numbers = numbers.map { |n| n * 2 }

p doubled_numbers

DIVISIBLE BY THREE

numbers = [5, 9, 21, 26, 39]

divisible_by_three = numbers.select { |n| n % 3 == 0 }

p divisible_by_three

FAVORITE NUMBER (PART 1)

[ 	['Dave', 7]
  	['Miranda', 3]
	['Jason', 11]	]

... (PART 2)

favorites = [['Dave', 7], ['Miranda', 3], ['Jason', 11]]

puts favorites.flatten!

ARE WE THE SAME?

array1 = [1, 5, 9]
array2 = [1, 9, 5]

puts array1.eql?(array2)
